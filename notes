#!/bin/bash
#reference table for quicknotes similar to tldr but for specific function calls

#basic usage: notes [option] [argument]
#options listed below in -h case segment
#arguments are always strings (add quotes for more specific searches or when adding a space between filenames/greps)
#will cat the contents of matching file entry in neighboring ~/bin/reference dir

FILENAME=~/.notes.conf

#first time run block:
first_run() {
	#generate initial conf file + default values for editing later (but will still work if
	#user cancels script at this point)
	touch ~/.notes.conf
	mkdir ~/my-notes
	echo "#!/bin/bash" >> ~/.notes.conf
	echo "#notes app default settings:" >> ~/.notes.conf
	echo "#changing the below values will modify the 'notes' command behavior" >> ~/.notes.conf
	echo "path=~/my-notes/ #where you will save notes for query" >> ~/.notes.conf
	echo "editor=vi #default editor for creating new notes with -n option" >> ~/.notes.conf
	echo "reader=cat #default, prints directly to terminal, can change to 'less'" >> ~/.notes.conf
	echo "hello world!" >> ~/my-notes/example
}

if [ ! -f "$FILENAME" ]; then
   first_run
   echo "establishing default settings in ~/.notes.conf and creating default save directory in ~/my-notes"
   echo ""
else
	echo ""
fi

#definitions:
. ~/.notes.conf

#basic run script
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "$package - your local library of quick notes"
      echo " "
      echo "notes are stored by default in ~/my-notes"
      echo "$package [options] [arguments]"
      echo " "
      echo "options:"
      echo "-h, --help                show brief help"
      echo "-f, --find=FIND           search for a subject string"
      echo "-g, --grep=GREP STRING    search for any display matches inside library"
      echo "-n, --new=NEW NOTE open default editor of choice in ~/my-notes/<note_name>"
      echo "** -n will also open an editor on existing note if you match the note name"
      echo " "
      echo "arguments:"
      echo "search for strings inside your notes, or the subjects of the notes themselves"
      echo "can also supply no options and supply the exact match of the file to read"
      echo "examples:"
      echo " "
      echo "$package examples"
      echo "$package -f nmcli_ --> did you mean nmcli_examples, nmcli_standards" 
      echo "$package -g 'HWADDR'= --> file: nmcli-standards: HWADDR=... ==> 802-3-ethernet.mac-address ..."
      echo "$package -n new_note --> runs $editor at path to new_note"
      echo ""
      echo "try the command: 'notes example'"
      echo ""
      exit 0
      ;;
    -f|--find)
      shift
      if test $# -gt 0; then
        find $path"$@"* | cut -c $length-100
      else
        echo "no string specified to look for..."
        exit 1
      fi
      shift
      ;;
    -g|--grep)
      shift
      if test $# -gt 0; then
        cat $path* | grep "$@"
      else
        echo "no string supplied to grep"
        exit 1
      fi
      shift
      ;;
    -n|--new)
      shift
      if test $# -gt 0; then
      	$editor $path"$@".txt
      else
      	echo "need to specify a new/existing file name"
      fi
      shift
      ;;	
    *)
	 if test $# -gt 0; then
	 	$reader $path"$@"
	 	break
	 else
	 	echo "try notes -h"
	  break
	fi
      ;;
  esac
done
